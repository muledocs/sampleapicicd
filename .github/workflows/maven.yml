name: Build and Deploy

on:
  push:
    branches:
      - master
      - release/deploy
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    
    steps:
    - name: Determine Environment
      id: set-env
      run: |
        if [ "${{ github.ref }}" == "refs/heads/master" ]; then
          echo "::set-output name=environment::Production"
        else
          echo "::set-output name=environment::Dev"
        fi

  build:
    needs: setup
    runs-on: ubuntu-latest
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B clean package -s settings.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@v2
      with:
          name: artifacts
          path: target/*.jar

  deploy:
    needs: [setup, build]
    runs-on: ubuntu-latest
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - uses: actions/download-artifact@v2
      with:
        name: artifacts
    
    - name: Deploy to CloudHub
      run: |
        mvn deploy -DmuleDeploy -DskipTests -Denv=${{ env.ENVIRONMENT }} --file pom.xml -s settings.xml
