name: MuleSoft Build and Deploy Pipeline

on:
  push:
    branches:
      - release/deploy  # Automatic deployments for Dev on push to release/deploy
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment (SIT, UAT, Production)'
        required: true
        default: 'SIT'  # Default can be adjusted based on your preference

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.stamp.outputs.artifact-path }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean package -s settings.xml

    - name: Stamp artifact file name with commit hash
      id: stamp
      run: |
        artifactName=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        stampedArtifactName="${artifactName%.jar}-$commitHash.jar"
        mv "$artifactName" "$stampedArtifactName"
        echo "::set-output name=artifact-path::$stampedArtifactName"

    - name: Upload artifact 
      uses: actions/upload-artifact@v2
      with:
          name: artifacts
          path: ${{ steps.stamp.outputs.artifact-path }}

  deploy:
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'Dev')
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: artifacts

    - name: Deploy to Dev
      run: mvn deploy -DmuleDeploy -DskipTests --file pom.xml -s settings.xml
      env:
        PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
        PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}

  deploy-manual:
    needs: build
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment != 'Dev'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [SIT, UAT, Production]
    continue-on-error: true
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: artifacts

    - name: Deploy to Environment
      if: matrix.env == github.event.inputs.environment
      run: |
        mvn deploy -DmuleDeploy -DskipTests -Denv=${{ matrix.env }} --file pom.xml -s settings.xml
      env:
        PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
        PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
