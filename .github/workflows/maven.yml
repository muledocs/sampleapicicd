# This workflow will build a MuleSoft project and deploy to CloudHub

name: Build and Deploy MuleSoft CICD

on:
  push:
    branches: [ master, release/deploy ]
  workflow_dispatch:
     inputs:
      environment:
        description: 'Deployment environment (e.g., Dev, SIT, UAT)'
        required: true
        default: 'Dev'
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}
    
    steps:
    
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Cache Depenedencies
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    
    - name: Build with maven
      run: mvn -B clean package -s settings.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
    
     
  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    env:
      PLATFORM_USERNAME: ${{ secrets.PLATFORM_USERNAME }}
      PLATFORM_PASSWORD: ${{ secrets.PLATFORM_PASSWORD }}

    steps:    
    
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    
    - name: Deploy to Dev
      run: mvn deploy -DmuleDeploy -DskipTests  --file pom.xml -s settings.xml

  deploy-sit:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'SIT'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@v3
      with:
        name: artifacts

    - name: Deploy to SIT
      run: mvn deploy -DmuleDeploy -DskipTests --file pom.xml -s settings.xml
         
    