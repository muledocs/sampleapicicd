name: Build and Deploy

on:
  push:
    branches:
      - release/deploy  # Automatic deployments for Dev on push to release/deploy
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment (SIT, UAT, Production)'
        required: true
        default: 'SIT'  # Default can be adjusted based on your preference

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.build_artifact.outputs.artifact-path }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn -B clean package -s settings.xml

    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
      id: build_artifact
      env:
        ARTIFACT_PATH: target/*.jar

    - name: Upload artifact 
      uses: actions/upload-artifact@v2
      with:
          name: artifacts
          path: ${{ steps.build_artifact.outputs.artifact-path }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.environment == 'Dev'
    steps:    
    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v2
      with:
        name: artifacts

    - name: Deploy to Dev
      run: mvn deploy -DmuleDeploy -DskipTests --file pom.xml -s settings.xml

  deploy-sit:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'SIT'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v2
      with:
        name: artifacts

    - name: Deploy to SIT
      run: mvn deploy -DmuleDeploy -DskipTests --file pom.xml -s settings.xml

  deploy-uat:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'UAT'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v2
      with:
        name: artifacts

    - name: Deploy to UAT
      run: mvn deploy -DmuleDeploy -DskipTests --file pom.xml -s settings.xml

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'Production'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - uses: actions/download-artifact@v2
      with:
        name: artifacts

    - name: Deploy to Production
      run: mvn deploy -DmuleDeploy -DskipTests --file pom.xml -s settings.xml
